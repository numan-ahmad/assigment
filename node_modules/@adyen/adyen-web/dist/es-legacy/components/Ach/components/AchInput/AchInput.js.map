{"version":3,"file":"AchInput.js","sources":["../../../../../../src/components/Ach/components/AchInput/AchInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport classNames from 'classnames';\nimport AchSecuredFields from './components/AchSecuredFields';\nimport SecuredFieldsProvider from '../../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport Field from '../../../internal/FormFields/Field';\nimport LoadingWrapper from '../../../internal/LoadingWrapper/LoadingWrapper';\nimport defaultProps from './defaultProps';\nimport defaultStyles from './defaultStyles';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './AchInput.scss';\nimport { ACHInputDataState, ACHInputProps, ACHInputStateError, ACHInputStateValid } from './types';\nimport StoreDetails from '../../../internal/StoreDetails';\nimport InputText from '../../../internal/FormFields/InputText';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\nimport RadioGroup from '../../../internal/FormFields/RadioGroup';\n\nfunction validateHolderName(holderName, holderNameRequired = false) {\n    if (holderNameRequired) {\n        return !!holderName && typeof holderName === 'string' && holderName.trim().length > 0;\n    }\n    return true;\n}\n\nfunction AchInput(props: ACHInputProps) {\n    const { i18n } = useCoreContext();\n\n    const holderNameIsValid = props.hasHolderName && (!!props.holderName || !!props.data.holderName);\n\n    const [errors, setErrors] = useState<ACHInputStateError>({});\n    const [valid, setValid] = useState<ACHInputStateValid>({\n        ...(props.holderNameRequired && { holderName: holderNameIsValid })\n    });\n\n    const [data, setData] = useState<ACHInputDataState>({\n        bankAccountType: 'checking',\n        ...(props.hasHolderName && { holderName: props.holderName || props.data.holderName })\n    });\n\n    const [isSfpValid, setIsSfpValid] = useState(false);\n    const [focusedElement, setFocusedElement] = useState('');\n    const [storePaymentMethod, setStorePaymentMethod] = useState(false);\n\n    const handleFocus = e => {\n        const isFocused = e.focus === true;\n\n        setFocusedElement(e.currentFocusObject);\n\n        if (isFocused) {\n            props.onFocus(e);\n        } else {\n            props.onBlur(e);\n        }\n    };\n\n    const handleHolderName = e => {\n        const holderName = e.target.value;\n\n        setData({ ...data, holderName });\n        setErrors({ ...errors, holderName: props.holderNameRequired ? !validateHolderName(holderName) : false });\n        setValid({ ...valid, holderName: props.holderNameRequired ? validateHolderName(holderName, props.holderNameRequired) : true });\n    };\n\n    const handleBankAccountType = e => {\n        const bankAccountType = e.target.value;\n\n        setData({ ...data, bankAccountType });\n    };\n\n    const handleSecuredFieldsChange = newState => {\n        const sfState = newState;\n\n        const tempHolderName = sfState.autoCompleteName ? sfState.autoCompleteName : data.holderName;\n\n        setData({ ...data, ...sfState.data, holderName: tempHolderName });\n        setErrors({ ...errors, ...sfState.errors });\n        setValid({\n            ...valid,\n            ...sfState.valid,\n            holderName: props.holderNameRequired ? validateHolderName(tempHolderName, props.holderNameRequired) : true\n        });\n\n        setIsSfpValid(sfState.isSfpValid);\n    };\n\n    // Refs\n    const sfp = useRef(null);\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const achRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(achRef.current).length) {\n        props.setComponentRef?.(achRef.current);\n    }\n\n    achRef.current.showValidation = () => {\n        // Validate SecuredFields\n        sfp.current.showValidation();\n\n        // Validate holderName\n        if (props.holderNameRequired && !valid.holderName) {\n            setErrors({ ...errors, holderName: true });\n        }\n    };\n\n    achRef.current.setStatus = setStatus;\n\n    useEffect(() => {\n        this.setFocusOn = sfp.current.setFocusOn;\n        this.updateStyles = sfp.current.updateStyles;\n\n        return () => {\n            sfp.current.destroy();\n        };\n    }, []);\n\n    // Run when state.data, -errors or -valid change\n    useEffect(() => {\n        // Validate whole component i.e holderName + securedFields\n        const holderNameValid = validateHolderName(data.holderName, props.holderNameRequired);\n        const sfpValid = isSfpValid;\n\n        const isValid = sfpValid && holderNameValid;\n\n        props.onChange({ data, isValid, storePaymentMethod });\n    }, [data, valid, errors, storePaymentMethod]);\n\n    return (\n        <div className=\"adyen-checkout__ach\">\n            <FormInstruction />\n\n            <SecuredFieldsProvider\n                ref={sfp}\n                {...extractPropsForSFP(props)}\n                styles={{ ...defaultStyles, ...props.styles }}\n                onChange={handleSecuredFieldsChange}\n                onFocus={handleFocus}\n                render={({ setRootNode, setFocusOn }, sfpState) => (\n                    <div ref={setRootNode} className=\"adyen-checkout__ach-input sf-input__wrapper\">\n                        <LoadingWrapper status={sfpState.status}>\n                            <div className={classNames(['adyen-checkout__fieldset', 'adyen-checkout__fieldset--ach'])}>\n                                {<div className=\"adyen-checkout__fieldset__title\">{i18n.get('ach.bankAccount')}</div>}\n\n                                <Field classNameModifiers={['bankAccountType', 'no-borders']} name={'bankAccountType'} useLabelElement={false}>\n                                    <RadioGroup\n                                        name={'bankAccountType'}\n                                        value={data.bankAccountType}\n                                        items={[\n                                            { id: 'checking', name: i18n.get('ach.checking') },\n                                            { id: 'savings', name: i18n.get('ach.savings') }\n                                        ]}\n                                        onChange={handleBankAccountType}\n                                        required={true}\n                                        style={'button'}\n                                    />\n                                </Field>\n\n                                {props.hasHolderName && (\n                                    <Field\n                                        label={i18n.get('ach.accountHolderNameField.title')}\n                                        className={'adyen-checkout__pm__holderName'}\n                                        errorMessage={!!errors.holderName && i18n.get('ach.accountHolderNameField.invalid')}\n                                        showContextualElement={props.showContextualElement}\n                                        contextualText={i18n.get('ach.accountHolderNameField.contextualText')}\n                                        isValid={!!valid.holderName}\n                                        name={'holderName'}\n                                    >\n                                        <InputText\n                                            className=\"adyen-checkout__pm__holderName__input adyen-checkout__input\"\n                                            placeholder={props?.placeholders?.holderName}\n                                            value={data.holderName}\n                                            required={props.holderNameRequired}\n                                            onInput={handleHolderName}\n                                        />\n                                    </Field>\n                                )}\n\n                                <AchSecuredFields\n                                    focusedElement={focusedElement}\n                                    onFocusField={setFocusOn}\n                                    errors={sfpState.errors}\n                                    valid={sfpState.valid}\n                                />\n                            </div>\n\n                            {props.enableStoreDetails && <StoreDetails onChange={setStorePaymentMethod} />}\n                        </LoadingWrapper>\n                    </div>\n                )}\n            />\n            {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n\nAchInput.defaultProps = defaultProps;\n\nexport default AchInput;\n\nconst extractPropsForSFP = (props: ACHInputProps) => {\n    return {\n        autoFocus: props.autoFocus,\n        clientKey: props.clientKey,\n        i18n: props.i18n,\n        keypadFix: props.keypadFix,\n        legacyInputMode: props.legacyInputMode,\n        loadingContext: props.loadingContext,\n        onAllValid: props.onAllValid,\n        onConfigSuccess: props.onConfigSuccess,\n        onError: props.onError,\n        onFieldValid: props.onFieldValid,\n        onFocus: props.onFocus,\n        onLoad: props.onLoad,\n        showWarnings: props.showWarnings,\n        styles: props.styles,\n        type: props.type,\n        forceCompat: props.forceCompat,\n        resources: props.resources,\n        placeholders: props.placeholders,\n        handleKeyPress: props.handleKeyPress\n    };\n};\n"],"names":["validateHolderName","holderName","holderNameRequired","trim","length","AchInput","props","i18n","useCoreContext","holderNameIsValid","hasHolderName","data","errors","setErrors","useState","valid","setValid","_object_spread","setData","bankAccountType","isSfpValid","setIsSfpValid","focusedElement","setFocusedElement","storePaymentMethod","setStorePaymentMethod","handleHolderName","e","target","value","_object_spread_props","handleBankAccountType","sfp","useRef","status","setStatus","achRef","Object","keys","current","setComponentRef","showValidation","useEffect","this","setFocusOn","updateStyles","destroy","holderNameValid","isValid","onChange","h","div","className","FormInstruction","SecuredFieldsProvider","ref","extractPropsForSFP","styles","defaultStyles","newState","sfState","tempHolderName","autoCompleteName","onFocus","isFocused","focus","currentFocusObject","onBlur","render","setRootNode","sfpState","LoadingWrapper","classNames","get","Field","classNameModifiers","name","useLabelElement","RadioGroup","items","id","required","style","label","errorMessage","showContextualElement","contextualText","InputText","placeholder","placeholders","onInput","AchSecuredFields","onFocusField","enableStoreDetails","StoreDetails","showPayButton","payButton","defaultProps","autoFocus","clientKey","keypadFix","legacyInputMode","loadingContext","onAllValid","onConfigSuccess","onError","onFieldValid","onLoad","showWarnings","type","forceCompat","resources","handleKeyPress"],"mappings":"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"}