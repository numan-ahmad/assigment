{"version":3,"file":"Riverty.js","sources":["../../../../src/components/Riverty/Riverty.tsx"],"sourcesContent":["import { h } from 'preact';\nimport OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport {\n    DISCLAIMER_MESSAGE_TRANSLATION_KEY,\n    allowedBillingCountries,\n    allowedDeliveryCountries,\n    deliveryAddressSpecification,\n    personalDetailsRequiredFields,\n    termsAndConditionsUrlMap,\n    privacyPolicyUrlMap\n} from './config';\nimport { getConsentUrl } from '../../utils/getConsentUrl';\nimport { LabelOnlyDisclaimerMessage } from '../internal/DisclaimerMessage/DisclaimerMessage';\nimport type { OpenInvoiceConfiguration } from '../helpers/OpenInvoiceContainer/types';\nimport { TxVariants } from '../tx-variants';\n\nexport default class Riverty extends OpenInvoiceContainer {\n    public static readonly type = TxVariants.riverty;\n\n    protected static defaultProps = {\n        personalDetailsRequiredFields,\n        deliveryAddressSpecification,\n        ...OpenInvoiceContainer.defaultProps\n    };\n\n    formatProps(props: OpenInvoiceConfiguration) {\n        const tocURL = getConsentUrl(props.countryCode, props.i18n?.locale, termsAndConditionsUrlMap);\n        const privacyURL = getConsentUrl(props.countryCode, props.i18n?.locale, privacyPolicyUrlMap);\n\n        return {\n            ...super.formatProps(props),\n            billingAddressSpecification: {\n                ...props.billingAddressSpecification,\n                allowedCountries: props.countryCode ? [props.countryCode] : allowedBillingCountries\n            },\n            deliveryAddressSpecification: {\n                ...props.deliveryAddressSpecification,\n                allowedCountries: allowedDeliveryCountries\n            },\n            consentCheckboxLabel: (\n                <LabelOnlyDisclaimerMessage message={props.i18n.get(DISCLAIMER_MESSAGE_TRANSLATION_KEY)} urls={[tocURL, privacyURL]} />\n            )\n        };\n    }\n}\n"],"names":["Riverty","OpenInvoiceContainer","formatProps","props","tocURL","getConsentUrl","countryCode","i18n","locale","termsAndConditionsUrlMap","privacyURL","privacyPolicyUrlMap","_object_spread_props","_object_spread","super","billingAddressSpecification","allowedCountries","allowedBillingCountries","deliveryAddressSpecification","allowedDeliveryCountries","consentCheckboxLabel","h","LabelOnlyDisclaimerMessage","message","get","DISCLAIMER_MESSAGE_TRANSLATION_KEY","urls","_define_property","type","TxVariants","riverty","defaultProps","personalDetailsRequiredFields"],"mappings":"+3CAgBe,MAAMA,UAAgBC,EASjCC,WAAAA,CAAYC,OACwCA,EACIA,EADpD,MAAMC,EAASC,EAAcF,EAAMG,YAAaH,QAAAA,EAAAA,EAAMI,YAANJ,IAAAA,OAAAA,EAAAA,EAAYK,OAAQC,GAC9DC,EAAaL,EAAcF,EAAMG,YAAaH,QAAAA,EAAAA,EAAMI,YAANJ,IAAAA,OAAAA,EAAAA,EAAYK,OAAQG,GAExE,OAAOC,EAAAC,EAAA,CAAA,EACAC,MAAMZ,YAAYC,IAAAA,CACrBY,4BAA6BH,EAAAC,EAAA,CAAA,EACtBV,EAAMY,6BAA2B,CACpCC,iBAAkBb,EAAMG,YAAc,CAACH,EAAMG,aAAeW,IAEhEC,6BAA8BN,EAAAC,EAAA,CAAA,EACvBV,EAAMe,8BAA4B,CACrCF,iBAAkBG,IAEtBC,qBACIC,EAACC,EAAAA,CAA2BC,QAASpB,EAAMI,KAAKiB,IAAIC,GAAqCC,KAAM,CAACtB,EAAQM,MAGpH,EA1BAiB,EADiB3B,EACM4B,OAAOC,EAAWC,SAEzCH,EAHiB3B,EAGA+B,eAAelB,EAAA,CAC5BmB,gCACAd,gCACGjB,EAAqB8B"}