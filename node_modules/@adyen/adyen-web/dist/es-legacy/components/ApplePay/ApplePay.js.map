{"version":3,"file":"ApplePay.js","sources":["../../../../src/components/ApplePay/ApplePay.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport ApplePayButton from './components/ApplePayButton';\nimport ApplePayService from './ApplePayService';\nimport base64 from '../../utils/base64';\nimport defaultProps from './defaultProps';\nimport { httpPost } from '../../core/Services/http';\nimport { APPLEPAY_SESSION_ENDPOINT } from './config';\nimport { preparePaymentRequest } from './payment-request';\nimport { resolveSupportedVersion, mapBrands, formatApplePayContactToAdyenAddressFormat } from './utils';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { DecodeObject } from '../../types/global-types';\nimport { TxVariants } from '../tx-variants';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\nimport { ANALYTICS_INSTANT_PAYMENT_BUTTON, ANALYTICS_SELECTED_STR } from '../../core/Analytics/constants';\n\nimport type { ApplePayConfiguration, ApplePayElementData, ApplePayPaymentOrderDetails, ApplePaySessionRequest } from './types';\nimport type { ICore } from '../../core/types';\nimport type { PaymentResponseData, RawPaymentResponse } from '../../types/global-types';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nconst latestSupportedVersion = 14;\n\nclass ApplePayElement extends UIElement<ApplePayConfiguration> {\n    public static type = TxVariants.applepay;\n    protected static defaultProps = defaultProps;\n\n    constructor(checkout: ICore, props?: ApplePayConfiguration) {\n        super(checkout, props);\n\n        const { isExpress, onShippingContactSelected, onShippingMethodSelected } = this.props;\n\n        if (isExpress === false && (onShippingContactSelected || onShippingMethodSelected)) {\n            throw new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'ApplePay - You must set \"isExpress\" flag to \"true\" in order to use \"onShippingContactSelected\" and/or \"onShippingMethodSelected\" callbacks'\n            );\n        }\n\n        this.startSession = this.startSession.bind(this);\n        this.submit = this.submit.bind(this);\n        this.validateMerchant = this.validateMerchant.bind(this);\n        this.collectOrderTrackingDetailsIfNeeded = this.collectOrderTrackingDetailsIfNeeded.bind(this);\n        this.handleAuthorization = this.handleAuthorization.bind(this);\n    }\n\n    /**\n     * Formats the component props\n     */\n    protected override formatProps(props) {\n        const version = props.version || resolveSupportedVersion(latestSupportedVersion);\n        const supportedNetworks = props.brands?.length ? mapBrands(props.brands) : props.supportedNetworks;\n\n        return {\n            ...props,\n            configuration: props.configuration,\n            supportedNetworks,\n            version,\n            totalPriceLabel: props.totalPriceLabel || props.configuration?.merchantName\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    protected override formatData(): ApplePayElementData {\n        const { applePayToken, billingAddress, deliveryAddress } = this.state;\n        const { isExpress } = this.props;\n\n        return {\n            paymentMethod: {\n                type: ApplePayElement.type,\n                applePayToken,\n                ...(isExpress && { subtype: 'express' })\n            },\n            ...(billingAddress && { billingAddress }),\n            ...(deliveryAddress && { deliveryAddress })\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        super.submitAnalytics({ ...analyticsObj }, this.props);\n    }\n\n    public override submit = (): void => {\n        // Analytics\n        if (this.props.isInstantPayment) {\n            this.submitAnalytics({ type: ANALYTICS_SELECTED_STR, target: ANALYTICS_INSTANT_PAYMENT_BUTTON });\n        }\n        void this.startSession();\n    };\n\n    private startSession() {\n        const { version, onValidateMerchant, onPaymentMethodSelected, onShippingMethodSelected, onShippingContactSelected } = this.props;\n\n        const paymentRequest = preparePaymentRequest({\n            companyName: this.props.configuration.merchantName,\n            countryCode: this.core.options.countryCode,\n            ...this.props\n        });\n\n        const session = new ApplePayService(paymentRequest, {\n            version,\n            onError: (error: unknown) => {\n                this.handleError(\n                    new AdyenCheckoutError('ERROR', 'ApplePay - Something went wrong on ApplePayService', {\n                        cause: error\n                    })\n                );\n            },\n            onCancel: event => {\n                this.handleError(new AdyenCheckoutError('CANCEL', 'ApplePay UI dismissed', { cause: event }));\n            },\n            onPaymentMethodSelected,\n            onShippingMethodSelected,\n            onShippingContactSelected,\n            onValidateMerchant: onValidateMerchant || this.validateMerchant,\n            onPaymentAuthorized: (resolve, reject, event) => {\n                const billingAddress = formatApplePayContactToAdyenAddressFormat(event.payment.billingContact);\n                const deliveryAddress = formatApplePayContactToAdyenAddressFormat(event.payment.shippingContact, true);\n\n                this.setState({\n                    applePayToken: btoa(JSON.stringify(event.payment.token.paymentData)),\n                    authorizedEvent: event,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                });\n\n                this.handleAuthorization()\n                    .then(this.makePaymentsCall)\n                    .then(sanitizeResponse)\n                    .then(verifyPaymentDidNotFail)\n                    .then(this.collectOrderTrackingDetailsIfNeeded)\n                    .then(({ paymentResponse, orderDetails }) => {\n                        resolve({\n                            status: ApplePaySession.STATUS_SUCCESS,\n                            ...(orderDetails && { orderDetails })\n                        });\n                        return paymentResponse;\n                    })\n                    .then(paymentResponse => {\n                        this.handleResponse(paymentResponse);\n                    })\n                    .catch((paymentResponse?: RawPaymentResponse) => {\n                        const errors = paymentResponse?.error?.applePayError;\n\n                        reject({\n                            status: ApplePaySession.STATUS_FAILURE,\n                            errors: errors ? (Array.isArray(errors) ? errors : [errors]) : undefined\n                        });\n\n                        const responseWithError: RawPaymentResponse = {\n                            ...paymentResponse,\n                            error: {\n                                applePayError: errors\n                            }\n                        };\n\n                        this.handleFailedResult(responseWithError);\n                    });\n            }\n        });\n\n        return new Promise((resolve, reject) => this.props.onClick(resolve, reject))\n            .then(() => {\n                session.begin();\n            })\n            .catch(() => ({\n                // Swallow exception triggered by onClick reject\n            }));\n    }\n\n    /**\n     * Call the 'onAuthorized' callback if available.\n     * Must be resolved/reject for the payment flow to continue\n     *\n     * @private\n     */\n    private async handleAuthorization(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (!this.props.onAuthorized) {\n                resolve();\n            }\n\n            const { authorizedEvent, billingAddress, deliveryAddress } = this.state;\n\n            this.props.onAuthorized(\n                {\n                    authorizedEvent,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                },\n                { resolve, reject }\n            );\n        }).catch((error?: ApplePayJS.ApplePayError) => {\n            // Format error in a way that the 'catch' of the 'onPaymentAuthorize' block accepts it\n            const data = { error: { applePayError: error } };\n            return Promise.reject(data);\n        });\n    }\n\n    /**\n     * Verify if the 'onOrderTrackingRequest' is provided. If so, triggers the callback expecting an\n     * Apple Pay order details back\n     *\n     * @private\n     */\n    private async collectOrderTrackingDetailsIfNeeded(\n        paymentResponse: PaymentResponseData\n    ): Promise<{ orderDetails?: ApplePayPaymentOrderDetails; paymentResponse: PaymentResponseData }> {\n        return new Promise<ApplePayPaymentOrderDetails | void>((resolve, reject) => {\n            if (!this.props.onOrderTrackingRequest) {\n                return resolve();\n            }\n\n            this.props.onOrderTrackingRequest(resolve, reject);\n        })\n            .then(orderDetails => {\n                return {\n                    paymentResponse,\n                    ...(orderDetails && { orderDetails })\n                };\n            })\n            .catch(() => {\n                return { paymentResponse };\n            });\n    }\n\n    private async validateMerchant(resolve, reject) {\n        const { hostname: domainName } = window.location;\n        const { clientKey, configuration, loadingContext, initiative } = this.props;\n        const { merchantName, merchantId } = configuration;\n        const path = `${APPLEPAY_SESSION_ENDPOINT}?clientKey=${clientKey}`;\n        const options = { loadingContext, path };\n        const request: ApplePaySessionRequest = {\n            displayName: merchantName,\n            domainName,\n            initiative,\n            merchantIdentifier: merchantId\n        };\n\n        try {\n            const response = await httpPost(options, request);\n            const decodedData: DecodeObject = base64.decode(response.data);\n            if (!decodedData.success) {\n                reject('Could not decode Apple Pay session');\n            } else {\n                const session = JSON.parse(decodedData.data);\n                resolve(session);\n            }\n        } catch (e) {\n            reject('Could not get Apple Pay session');\n        }\n    }\n\n    /**\n     * Validation\n     *\n     * @remarks\n     * Apple Pay does not require any specific validation\n     */\n    get isValid(): boolean {\n        return true;\n    }\n\n    /**\n     * Determine a shopper's ability to return a form of payment from Apple Pay.\n     * @returns Promise Resolve/Reject whether the shopper can use Apple Pay\n     */\n    public override async isAvailable(): Promise<void> {\n        if (document.location.protocol !== 'https:') {\n            return Promise.reject(new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'Trying to start an Apple Pay session from an insecure document'));\n        }\n\n        if (!this.props.onValidateMerchant && !this.props.clientKey) {\n            return Promise.reject(new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'clientKey was not provided'));\n        }\n\n        try {\n            if (window.ApplePaySession && ApplePaySession.canMakePayments() && ApplePaySession.supportsVersion(this.props.version)) {\n                return Promise.resolve();\n            }\n        } catch (error) {\n            console.warn(error);\n        }\n\n        return Promise.reject(new AdyenCheckoutError('ERROR', 'Apple Pay is not available on this device'));\n    }\n\n    /**\n     * Renders the Apple Pay button or nothing in the Dropin\n     */\n    render() {\n        if (this.props.showPayButton) {\n            return (\n                <ApplePayButton\n                    i18n={this.props.i18n}\n                    buttonColor={this.props.buttonColor}\n                    buttonType={this.props.buttonType}\n                    onClick={e => {\n                        e.preventDefault();\n                        this.submit();\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default ApplePayElement;\n"],"names":["ApplePayElement","UIElement","formatProps","props","version","resolveSupportedVersion","supportedNetworks","brands","length","mapBrands","_object_spread_props","configuration","totalPriceLabel","merchantName","formatData","applePayToken","billingAddress","deliveryAddress","this","state","isExpress","_object_spread","paymentMethod","type","subtype","submitAnalytics","analyticsObj","super","startSession","onValidateMerchant","onPaymentMethodSelected","onShippingMethodSelected","onShippingContactSelected","paymentRequest","preparePaymentRequest","companyName","countryCode","core","options","session","ApplePayService","onError","error","handleError","AdyenCheckoutError","cause","onCancel","event","validateMerchant","onPaymentAuthorized","resolve","reject","formatApplePayContactToAdyenAddressFormat","payment","billingContact","shippingContact","setState","btoa","JSON","stringify","token","paymentData","authorizedEvent","handleAuthorization","then","makePaymentsCall","sanitizeResponse","verifyPaymentDidNotFail","collectOrderTrackingDetailsIfNeeded","paymentResponse","orderDetails","status","ApplePaySession","STATUS_SUCCESS","handleResponse","catch","errors","applePayError","STATUS_FAILURE","Array","isArray","undefined","responseWithError","handleFailedResult","Promise","onClick","begin","onAuthorized","data","onOrderTrackingRequest","hostname","domainName","window","location","clientKey","loadingContext","initiative","merchantId","path","APPLEPAY_SESSION_ENDPOINT","request","displayName","merchantIdentifier","response","httpPost","decodedData","base64","decode","success","parse","e","isValid","isAvailable","document","protocol","canMakePayments","supportsVersion","console","warn","render","showPayButton","h","ApplePayButton","i18n","buttonColor","buttonType","preventDefault","submit","constructor","checkout","_define_property","isInstantPayment","ANALYTICS_SELECTED_STR","target","ANALYTICS_INSTANT_PAYMENT_BUTTON","bind","TxVariants","applepay","defaultProps"],"mappings":"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"}