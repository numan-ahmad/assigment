{"version":3,"file":"utils.js","sources":["../../../../src/components/ApplePay/utils.ts"],"sourcesContent":["import { AddressData } from '../../types/global-types';\n\nexport function resolveSupportedVersion(latestVersion: number): number | null {\n    const versions = [];\n    for (let i = latestVersion; i > 0; i--) {\n        versions.push(i);\n    }\n\n    try {\n        return versions.find(v => v && window.ApplePaySession && ApplePaySession.supportsVersion(v));\n    } catch (error) {\n        console.warn(error);\n        return null;\n    }\n}\n\nexport function mapBrands(brands) {\n    const brandMapping = {\n        mc: 'masterCard',\n        amex: 'amex',\n        visa: 'visa',\n        elodebit: 'elo',\n        elo: 'elo',\n        interac: 'interac',\n        discover: 'discover',\n        jcb: 'jcb',\n        electron: 'electron',\n        maestro: 'maestro',\n        girocard: 'girocard',\n        cartebancaire: 'cartesBancaires',\n        eftpos_australia: 'eftpos'\n    };\n\n    return brands.reduce((accumulator, item) => {\n        if (!!brandMapping[item] && !accumulator.includes(brandMapping[item])) {\n            accumulator.push(brandMapping[item]);\n        }\n        return accumulator;\n    }, []);\n}\n\n/**\n * This function formats Apple Pay contact format to Adyen address format\n *\n * Setting 'houseNumberOrName' to ZZ won't affect the AVS check, and it will make the algorithm take the\n * house number from the 'street' property.\n */\nexport function formatApplePayContactToAdyenAddressFormat(\n    paymentContact: ApplePayJS.ApplePayPaymentContact,\n    isDeliveryAddress?: boolean\n): AddressData | undefined {\n    if (!paymentContact) {\n        return;\n    }\n\n    return {\n        city: paymentContact.locality,\n        country: paymentContact.countryCode,\n        houseNumberOrName: 'ZZ',\n        postalCode: paymentContact.postalCode,\n        street: paymentContact.addressLines?.join(' ').trim(),\n        ...(paymentContact.administrativeArea && { stateOrProvince: paymentContact.administrativeArea }),\n        ...(isDeliveryAddress && {\n            firstName: paymentContact.givenName,\n            lastName: paymentContact.familyName\n        })\n    };\n}\n"],"names":["resolveSupportedVersion","latestVersion","versions","i","push","find","v","window","ApplePaySession","supportsVersion","error","console","warn","mapBrands","brands","brandMapping","mc","amex","visa","elodebit","elo","interac","discover","jcb","electron","maestro","girocard","cartebancaire","eftpos_australia","reduce","accumulator","item","includes","formatApplePayContactToAdyenAddressFormat","paymentContact","isDeliveryAddress","_object_spread","city","locality","country","countryCode","houseNumberOrName","postalCode","street","addressLines","join","trim","administrativeArea","stateOrProvince","firstName","givenName","lastName","familyName"],"mappings":"wHAEO,SAASA,EAAwBC,GACpC,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAIF,EAAeE,EAAI,EAAGA,IAC/BD,EAASE,KAAKD,GAGlB,IACI,OAAOD,EAASG,MAAKC,GAAKA,GAAKC,OAAOC,iBAAmBA,gBAAgBC,gBAAgBH,IAC7F,CAAE,MAAOI,GAEL,OADAC,QAAQC,KAAKF,GACN,IACX,CACJ,CAEO,SAASG,EAAUC,GACtB,MAAMC,EAAe,CACjBC,GAAI,aACJC,KAAM,OACNC,KAAM,OACNC,SAAU,MACVC,IAAK,MACLC,QAAS,UACTC,SAAU,WACVC,IAAK,MACLC,SAAU,WACVC,QAAS,UACTC,SAAU,WACVC,cAAe,kBACfC,iBAAkB,UAGtB,OAAOd,EAAOe,QAAO,CAACC,EAAaC,KACzBhB,EAAagB,KAAUD,EAAYE,SAASjB,EAAagB,KAC3DD,EAAY1B,KAAKW,EAAagB,IAE3BD,IACR,GACP,CAQO,SAASG,EACZC,EACAC,GAWYD,IAAAA,EATZ,GAAKA,EAIL,6UAAOE,CAAA,CACHC,KAAMH,EAAeI,SACrBC,QAASL,EAAeM,YACxBC,kBAAmB,KACnBC,WAAYR,EAAeQ,WAC3BC,OAAmC,QAA3BT,EAAAA,EAAeU,wBAAfV,SAAAA,EAA6BW,KAAK,KAAKC,QAC3CZ,EAAea,oBAAsB,CAAEC,gBAAiBd,EAAea,oBACvEZ,GAAqB,CACrBc,UAAWf,EAAegB,UAC1BC,SAAUjB,EAAekB,YAGrC"}