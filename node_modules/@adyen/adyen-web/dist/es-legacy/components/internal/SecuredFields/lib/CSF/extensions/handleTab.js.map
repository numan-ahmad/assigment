{"version":3,"file":"handleTab.js","sources":["../../../../../../../../src/components/internal/SecuredFields/lib/CSF/extensions/handleTab.ts"],"sourcesContent":["import ua from '../utils/userAgent';\nimport * as logger from '../../utilities/logger';\nimport { shiftTabCreditCard } from '../utils/tabbing/tabScenarioCreditCard';\nimport { shiftTabACH } from '../utils/tabbing/tabScenarioACH';\nimport { shiftTabGiftCard } from '../utils/tabbing/tabScenarioGiftCard';\nimport { shiftTabKCP } from '../utils/tabbing/tabScenarioKCP';\nimport { SFFieldType, ShiftTabObject } from '../../types';\nimport { focusExternalField } from '../utils/tabbing/utils';\n\nconst logTab = false;\n\nfunction handleShiftTab(fieldType: SFFieldType): void {\n    if (logTab) logger.log('### handleTab::handleShiftTab:: fieldType', fieldType);\n\n    let shiftTabObj: ShiftTabObject;\n\n    switch (this.state.type) {\n        // ACH scenario: bankAccountNumber SF followed by a bankLocationId SF\n        case 'ach':\n            shiftTabObj = shiftTabACH(fieldType);\n            break;\n\n        // GIFT CARD scenario: SecurityCode preceded by CardNumber\n        case 'giftcard':\n            shiftTabObj = shiftTabGiftCard(fieldType, this.props.rootNode);\n            break;\n\n        // Credit Card scenarios\n        default:\n            // KCP scenario: Regular credit card but with additional fields\n            // - an encrypted pin/password field preceded by a form field of a non-SF type (d.o.b/taxRefNum)\n            if (this.state.isKCP) {\n                shiftTabObj = shiftTabKCP(fieldType, this.props.rootNode, this.state.hasSeparateDateFields);\n            } else {\n                // Regular Credit Card\n                shiftTabObj = shiftTabCreditCard(fieldType, this.props.rootNode, this.state.hasSeparateDateFields, this.state.numIframes);\n            }\n            break;\n    }\n\n    const fieldToFocus: string = shiftTabObj.fieldToFocus;\n    const additionalField: HTMLElement = shiftTabObj.additionalField;\n\n    if (fieldToFocus) {\n        this.setFocusOnFrame(fieldToFocus, logTab);\n    } else if (additionalField) {\n        focusExternalField(additionalField);\n    }\n}\n\nconst eligibleForTabFix = (): boolean => ua.__IS_FIREFOX || (ua.__IS_IE && ua.__IS_IE <= 11);\n\nfunction handleSFShiftTab(fieldType: SFFieldType): void {\n    if (eligibleForTabFix()) {\n        this.handleShiftTab(fieldType);\n    }\n}\n\nexport default {\n    handleShiftTab,\n    handleSFShiftTab\n};\n"],"names":["handleTab","handleShiftTab","fieldType","shiftTabObj","this","state","type","shiftTabACH","shiftTabGiftCard","props","rootNode","isKCP","shiftTabKCP","hasSeparateDateFields","shiftTabCreditCard","numIframes","fieldToFocus","additionalField","setFocusOnFrame","focusExternalField","handleSFShiftTab","ua","__IS_FIREFOX","__IS_IE"],"mappings":"kaA0DA,IAAeA,EAAA,CACXC,eAhDJ,SAAwBC,GAGpB,IAAIC,EAEJ,OAAQC,KAAKC,MAAMC,MAEf,IAAK,MACDH,EAAcI,EAAYL,GAC1B,MAGJ,IAAK,WACDC,EAAcK,EAAiBN,EAAWE,KAAKK,MAAMC,UACrD,MAGJ,QAIQP,EADAC,KAAKC,MAAMM,MACGC,EAAYV,EAAWE,KAAKK,MAAMC,SAAUN,KAAKC,MAAMQ,uBAGvDC,EAAmBZ,EAAWE,KAAKK,MAAMC,SAAUN,KAAKC,MAAMQ,sBAAuBT,KAAKC,MAAMU,YAK1H,MAAMC,EAAuBb,EAAYa,aACnCC,EAA+Bd,EAAYc,gBAE7CD,EACAZ,KAAKc,gBAAgBF,EAnCd,OAoCAC,GACPE,EAAmBF,EAE3B,EAYIG,iBARJ,SAA0BlB,IAFemB,EAAGC,cAAiBD,EAAGE,SAAWF,EAAGE,SAAW,KAIjFnB,KAAKH,eAAeC,EAE5B"}