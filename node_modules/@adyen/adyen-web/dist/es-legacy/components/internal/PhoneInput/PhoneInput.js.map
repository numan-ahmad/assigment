{"version":3,"file":"PhoneInput.js","sources":["../../../../../src/components/internal/PhoneInput/PhoneInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useCallback, useEffect } from 'preact/hooks';\nimport Field from '../FormFields/Field';\nimport useForm from '../../../utils/useForm';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './PhoneInput.scss';\nimport Select from '../FormFields/Select';\nimport { phoneFormatters, phoneValidationRules } from './validate';\nimport { PhoneInputProps, PhoneInputSchema } from './types';\nimport InputText from '../FormFields/InputText';\nimport Fieldset from '../FormFields/Fieldset';\n\nfunction PhoneInput(props: PhoneInputProps) {\n    const { i18n } = useCoreContext();\n\n    const schema = props.requiredFields || [...(props?.items?.length ? ['phonePrefix'] : []), 'phoneNumber'];\n    const showPrefix = schema.includes('phonePrefix') && !!props?.items?.length;\n    const showNumber = schema.includes('phoneNumber');\n\n    const { handleChangeFor, data, valid, errors, isValid, triggerValidation, setSchema } = useForm<PhoneInputSchema>({\n        i18n,\n        ...props,\n        schema,\n        defaultData: props.data,\n        rules: phoneValidationRules,\n        formatters: phoneFormatters\n    });\n\n    useEffect(() => {\n        setSchema(schema);\n    }, [schema.toString()]);\n\n    // Force re-validation of the phoneNumber when data.phonePrefix changes (since the validation rules will also change)\n    useEffect((): void => {\n        if (data.phoneNumber) {\n            handleChangeFor('phoneNumber', 'blur')(data.phoneNumber);\n        }\n    }, [data.phonePrefix]);\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    this.triggerValidation = triggerValidation;\n\n    const getPhoneFieldError = useCallback(\n        (field: string) => {\n            if (errors[field]) {\n                const propsField = field === 'phoneNumber' ? 'phoneNumberErrorKey' : 'phonePrefixErrorKey';\n                const key = props[propsField] ? props[propsField] : errors[field].errorMessage;\n                return i18n.get(key) ?? null;\n            }\n            return null;\n        },\n        [errors]\n    );\n\n    return (\n        <Fieldset classNameModifiers={['phone-input']}>\n            {showPrefix && (\n                <Field\n                    className={'adyen-checkout-field--phone-prefix'}\n                    label={i18n.get('telephonePrefix')}\n                    errorMessage={getPhoneFieldError('phonePrefix')}\n                    showValidIcon={false}\n                    isValid={valid.phonePrefix}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phonePrefix'}\n                >\n                    <Select\n                        className={'adyen-checkout-dropdown adyen-checkout-dropdown--countrycode-selector'}\n                        name={'phonePrefix'}\n                        items={props.items}\n                        onChange={handleChangeFor('phonePrefix')}\n                        placeholder={props?.placeholders?.phonePrefix}\n                        selectedValue={data.phonePrefix}\n                    />\n                </Field>\n            )}\n\n            {showNumber && (\n                <Field\n                    className={'adyen-checkout-field--phone-number'}\n                    label={props.phoneNumberKey ? i18n.get(props.phoneNumberKey) : i18n.get('telephoneNumber')}\n                    errorMessage={getPhoneFieldError('phoneNumber')}\n                    isValid={valid.phoneNumber}\n                    filled={data?.phoneNumber?.length > 0}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phoneNumber'}\n                >\n                    <InputText\n                        className=\"adyen-checkout__input adyen-checkout-input adyen-checkout-input--phone-number\"\n                        type=\"tel\"\n                        name=\"phoneNumber\"\n                        value={data.phoneNumber}\n                        onInput={handleChangeFor('phoneNumber', 'input')}\n                        onBlur={handleChangeFor('phoneNumber', 'blur')}\n                        placeholder={props?.placeholders?.phoneNumber}\n                        autoCorrect=\"off\"\n                        required={true}\n                    />\n                </Field>\n            )}\n        </Fieldset>\n    );\n}\n\nPhoneInput.defaultProps = {\n    phoneLabel: 'telephoneNumber'\n};\n\nexport default PhoneInput;\n"],"names":["PhoneInput","props","data","i18n","useCoreContext","schema","requiredFields","items","length","showPrefix","includes","showNumber","handleChangeFor","valid","errors","isValid","triggerValidation","setSchema","useForm","_object_spread_props","_object_spread","defaultData","rules","phoneValidationRules","formatters","phoneFormatters","useEffect","toString","phoneNumber","phonePrefix","onChange","this","getPhoneFieldError","useCallback","field","propsField","key","errorMessage","get","h","Fieldset","classNameModifiers","Field","className","label","showValidIcon","dir","name","Select","placeholder","placeholders","selectedValue","phoneNumberKey","filled","InputText","type","value","onInput","onBlur","autoCorrect","required","defaultProps","phoneLabel"],"mappings":"igCAYA,SAASA,EAAWC,OAG4BA,EACWA,EA2DtBA,EAYTC,EAYSD,EAtFjC,MAAME,KAAEA,GAASC,IAEXC,EAASJ,EAAMK,gBAAkB,KAAKL,SAAAA,QAAAA,EAAAA,EAAOM,aAAPN,IAAAA,SAAAA,EAAcO,QAAS,CAAC,eAAiB,GAAK,eACpFC,EAAaJ,EAAOK,SAAS,mBAAoBT,SAAAA,QAAAA,EAAAA,EAAOM,aAAPN,IAAAA,OAAAA,EAAAA,EAAcO,QAC/DG,EAAaN,EAAOK,SAAS,gBAE7BE,gBAAEA,EAAeV,KAAEA,EAAIW,MAAEA,EAAKC,OAAEA,EAAMC,QAAEA,EAAOC,kBAAEA,EAAiBC,UAAEA,GAAcC,EAA0BC,wUAAAC,CAAA,CAC9GjB,QACGF,GAAAA,CACHI,SACAgB,YAAapB,EAAMC,KACnBoB,MAAOC,EACPC,WAAYC,KAGhBC,GAAU,KACNT,EAAUZ,EAAAA,GACX,CAACA,EAAOsB,aAGXD,GAAU,KACFxB,EAAK0B,aACLhB,EAAgB,cAAe,OAA/BA,CAAuCV,EAAK0B,YAChD,GACD,CAAC1B,EAAK2B,cAETH,GAAU,KACNzB,EAAM6B,SAAS,CAAE5B,OAAMW,QAAOC,SAAQC,WAAQ,GAC/C,CAACb,EAAMW,EAAOC,EAAQC,IAEzBgB,KAAKf,kBAAoBA,EAEzB,MAAMgB,EAAqBC,GACtBC,IACG,GAAIpB,EAAOoB,GAAQ,CACf,MAAMC,EAAuB,gBAAVD,EAA0B,sBAAwB,sBAC/DE,EAAMnC,EAAMkC,GAAclC,EAAMkC,GAAcrB,EAAOoB,GAAOG,aAC3DlC,IAAAA,EAAP,OAAgBiC,QAATjC,EAAAA,EAAKmC,IAAIF,cAATjC,EAAAA,EAAiB,IAC5B,CACA,OAAO,IAAA,GAEX,CAACW,IAGL,OACIyB,EAACC,EAAAA,CAASC,mBAAoB,CAAC,gBAC1BhC,GACG8B,EAACG,EAAAA,CACGC,UAAW,qCACXC,MAAOzC,EAAKmC,IAAI,mBAChBD,aAAcL,EAAmB,eACjCa,eAAe,EACf9B,QAASF,EAAMgB,YACfiB,IAAK,MACL3C,KAAMA,EACN4C,KAAM,eAENR,EAACS,EAAAA,CACGL,UAAW,wEACXI,KAAM,cACNxC,MAAON,EAAMM,MACbuB,SAAUlB,EAAgB,eAC1BqC,YAAahD,SAAmB,QAAnBA,EAAAA,EAAOiD,oBAAPjD,IAAAA,OAAAA,EAAAA,EAAqB4B,YAClCsB,cAAejD,EAAK2B,eAK/BlB,GACG4B,EAACG,EAAAA,CACGC,UAAW,qCACXC,MAAO3C,EAAMmD,eAAiBjD,EAAKmC,IAAIrC,EAAMmD,gBAAkBjD,EAAKmC,IAAI,mBACxED,aAAcL,EAAmB,eACjCjB,QAASF,EAAMe,YACfyB,QAAQnD,SAAAA,QAAAA,EAAAA,EAAM0B,mBAAN1B,IAAAA,OAAAA,EAAAA,EAAmBM,QAAS,EACpCsC,IAAK,MACL3C,KAAMA,EACN4C,KAAM,eAENR,EAACe,EAAAA,CACGX,UAAU,gFACVY,KAAK,MACLR,KAAK,cACLS,MAAOtD,EAAK0B,YACZ6B,QAAS7C,EAAgB,cAAe,SACxC8C,OAAQ9C,EAAgB,cAAe,QACvCqC,YAAahD,SAAmB,QAAnBA,EAAAA,EAAOiD,oBAAPjD,IAAAA,OAAAA,EAAAA,EAAqB2B,YAClC+B,YAAY,MACZC,UAAU,KAMlC,CAEA5D,EAAW6D,aAAe,CACtBC,WAAY"}