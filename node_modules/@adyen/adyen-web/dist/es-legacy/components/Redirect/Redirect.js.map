{"version":3,"file":"Redirect.js","sources":["../../../../src/components/Redirect/Redirect.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectShopper from './components/RedirectShopper';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport { RedirectConfiguration } from './types';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { ANALYTICS_ERROR_CODE, ANALYTICS_ERROR_TYPE, ANALYTICS_EVENT } from '../../core/Analytics/constants';\n\nclass RedirectElement extends UIElement<RedirectConfiguration> {\n    public static type = TxVariants.redirect;\n\n    public static defaultProps = {\n        type: RedirectElement.type\n    };\n\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.type\n            },\n            browserInfo: this.browserInfo\n        };\n    }\n\n    private handleRedirectError = () => {\n        super.submitAnalytics({\n            component: this.props.paymentMethodType,\n            type: ANALYTICS_EVENT.error,\n            errorType: ANALYTICS_ERROR_TYPE.redirect,\n            code: ANALYTICS_ERROR_CODE.redirect\n        });\n    };\n\n    get isValid() {\n        return true;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    render() {\n        if (this.props.url && this.props.method) {\n            return (\n                <RedirectShopper\n                    url={this.props.url}\n                    {...this.props}\n                    onActionHandled={this.onActionHandled}\n                    onRedirectError={this.handleRedirectError}\n                />\n            );\n        }\n\n        if (this.props.showPayButton) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <RedirectButton\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                </CoreProvider>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default RedirectElement;\n"],"names":["RedirectElement","UIElement","formatData","paymentMethod","type","this","browserInfo","isValid","collectBrowserInfo","render","props","url","method","h","RedirectShopper","onActionHandled","onRedirectError","handleRedirectError","showPayButton","CoreProvider","i18n","loadingContext","resources","RedirectButton","name","displayName","onSubmit","submit","payButton","ref","componentRef","super","args","_define_property","submitAnalytics","component","paymentMethodType","ANALYTICS_EVENT","error","errorType","ANALYTICS_ERROR_TYPE","redirect","code","ANALYTICS_ERROR_CODE","TxVariants","defaultProps"],"mappings":"i0CAUA,MAAMA,UAAwBC,EAO1BC,UAAAA,GACI,MAAO,CACHC,cAAe,CACXC,KAAMC,KAAKD,MAEfE,YAAaD,KAAKC,YAE1B,CAWA,WAAIC,GACA,OAAO,CACX,CAEA,eAAID,GACA,OAAOE,GACX,CAEAC,MAAAA,GACI,OAAIJ,KAAKK,MAAMC,KAAON,KAAKK,MAAME,OAEzBC,EAACC,EAAAA,EAAAA,EAAAA,CACGH,IAAKN,KAAKK,MAAMC,KACZN,KAAKK,OAAK,CACdK,gBAAiBV,KAAKU,gBACtBC,gBAAiBX,KAAKY,uBAK9BZ,KAAKK,MAAMQ,cAEPL,EAACM,EAAAA,CAAaC,KAAMf,KAAKK,MAAMU,KAAMC,eAAgBhB,KAAKK,MAAMW,eAAgBC,UAAWjB,KAAKiB,WAC5FT,EAACU,EAAAA,EAAAA,EAAAA,GACOlB,KAAKK,OAAK,CACdQ,cAAeb,KAAKK,MAAMQ,cAC1BM,KAAMnB,KAAKoB,YACXC,SAAUrB,KAAKsB,OACfC,UAAWvB,KAAKuB,UAChBC,IAAKA,IACDxB,KAAKyB,aAAeD,CAAAA,MAOjC,IACX,mBA/CAE,SAAAC,GAAAC,EAAA5B,KAAQY,uBAAsB,KAC1Bc,MAAMG,gBAAgB,CAClBC,UAAW9B,KAAKK,MAAM0B,kBACtBhC,KAAMiC,EAAgBC,MACtBC,UAAWC,EAAqBC,SAChCC,KAAMC,EAAqBF,UAC/B,KArBJR,EADEjC,EACYI,OAAOwC,EAAWH,UAEhCR,EAHEjC,EAGY6C,eAAe,CACzBzC,KAAMJ,EAAgBI"}