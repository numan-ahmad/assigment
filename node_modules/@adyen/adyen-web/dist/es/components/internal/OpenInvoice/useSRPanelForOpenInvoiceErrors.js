import{useState as e,useMemo as s,useEffect as r}from"../../../external/preact/hooks/dist/hooks.js";import{enhanceErrorObjectKeys as o}from"../../../core/Errors/utils.js";import{COMPANY_DETAILS_SCHEMA as t}from"../CompanyDetails/CompanyDetails.js";import{PERSONAL_DETAILS_SCHEMA as i}from"../PersonalDetails/PersonalDetails.js";import{ERROR_ACTION_BLUR_SCENARIO as a,ERROR_ACTION_FOCUS_FIELD as l}from"../../../core/Errors/constants.js";import n from"../../../core/Errors/useSRPanelContext.js";import c from"../Address/Specifications.js";import{setFocusOnField as d}from"../../../utils/setFocus.js";import{usePrevious as p}from"../../../utils/hookUtils.js";import{getArrayDifferences as u}from"../../../utils/arrayUtils.js";import{mapFieldKey as m}from"./utils.js";const y=({errors:y,data:f,props:b,isValidating:j})=>{const[g,A]=e(null),F=p(g),{setSRMessagesFromObjects:S,setSRMessagesFromStrings:h,clearSRPanel:C,shouldMoveFocusSR:k}=n(),v=S?.({fieldTypeMappingFn:m}),D=s((()=>new c),[]),E=s((()=>new c(b.deliveryAddressSpecification)),[]);r((()=>{try{const e="deliveryAddress:",s="billingAddress:",{companyDetails:r,personalDetails:n,bankAccount:c,billingAddress:p,deliveryAddress:m,...g}=y,S=o(p,s),M=o(m,e),R={..."object"==typeof r&&r,..."object"==typeof n&&n,..."object"==typeof c&&c,..."object"==typeof S&&S,..."object"==typeof M&&M,...g},x=t,L=b.personalDetailsRequiredFields??i,P=i.filter((e=>L?.includes(e))),$=["holder","iban"],w=D.getAddressSchemaForCountryFlat(f.billingAddress?.country).map((e=>`${s}${e}`)),T=E.getAddressSchemaForCountryFlat(f.deliveryAddress?.country).map((s=>`${e}${s}`)),U=x.concat(P,$,w,T,["consentCheckbox"]),V=D.getAddressLabelsForCountry(f.billingAddress?.country),_=E.getAddressLabelsForCountry(f.deliveryAddress?.country),q=v?.({errors:R,isValidating:j.current,layout:U,countrySpecificLabels:{...V,..._}}),B=q?.currentErrorsSortedByLayout;switch(A(B),q?.action){case l:k&&d(".adyen-checkout__open-invoice",q.fieldToFocus),setTimeout((()=>{j.current=!1}),300);break;case a:{const e=u(B,F,"field"),s=e?.[0];if(s){const e="shopperEmail.invalid"===s.errorCode?s.errorMessage:null;h(e)}else C();break}}}catch(e){}}),[y,f])};export{y as default};
//# sourceMappingURL=useSRPanelForOpenInvoiceErrors.js.map
