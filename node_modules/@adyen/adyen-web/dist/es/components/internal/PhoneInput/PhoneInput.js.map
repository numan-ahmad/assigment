{"version":3,"file":"PhoneInput.js","sources":["../../../../../src/components/internal/PhoneInput/PhoneInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useCallback, useEffect } from 'preact/hooks';\nimport Field from '../FormFields/Field';\nimport useForm from '../../../utils/useForm';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './PhoneInput.scss';\nimport Select from '../FormFields/Select';\nimport { phoneFormatters, phoneValidationRules } from './validate';\nimport { PhoneInputProps, PhoneInputSchema } from './types';\nimport InputText from '../FormFields/InputText';\nimport Fieldset from '../FormFields/Fieldset';\n\nfunction PhoneInput(props: PhoneInputProps) {\n    const { i18n } = useCoreContext();\n\n    const schema = props.requiredFields || [...(props?.items?.length ? ['phonePrefix'] : []), 'phoneNumber'];\n    const showPrefix = schema.includes('phonePrefix') && !!props?.items?.length;\n    const showNumber = schema.includes('phoneNumber');\n\n    const { handleChangeFor, data, valid, errors, isValid, triggerValidation, setSchema } = useForm<PhoneInputSchema>({\n        i18n,\n        ...props,\n        schema,\n        defaultData: props.data,\n        rules: phoneValidationRules,\n        formatters: phoneFormatters\n    });\n\n    useEffect(() => {\n        setSchema(schema);\n    }, [schema.toString()]);\n\n    // Force re-validation of the phoneNumber when data.phonePrefix changes (since the validation rules will also change)\n    useEffect((): void => {\n        if (data.phoneNumber) {\n            handleChangeFor('phoneNumber', 'blur')(data.phoneNumber);\n        }\n    }, [data.phonePrefix]);\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    this.triggerValidation = triggerValidation;\n\n    const getPhoneFieldError = useCallback(\n        (field: string) => {\n            if (errors[field]) {\n                const propsField = field === 'phoneNumber' ? 'phoneNumberErrorKey' : 'phonePrefixErrorKey';\n                const key = props[propsField] ? props[propsField] : errors[field].errorMessage;\n                return i18n.get(key) ?? null;\n            }\n            return null;\n        },\n        [errors]\n    );\n\n    return (\n        <Fieldset classNameModifiers={['phone-input']}>\n            {showPrefix && (\n                <Field\n                    className={'adyen-checkout-field--phone-prefix'}\n                    label={i18n.get('telephonePrefix')}\n                    errorMessage={getPhoneFieldError('phonePrefix')}\n                    showValidIcon={false}\n                    isValid={valid.phonePrefix}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phonePrefix'}\n                >\n                    <Select\n                        className={'adyen-checkout-dropdown adyen-checkout-dropdown--countrycode-selector'}\n                        name={'phonePrefix'}\n                        items={props.items}\n                        onChange={handleChangeFor('phonePrefix')}\n                        placeholder={props?.placeholders?.phonePrefix}\n                        selectedValue={data.phonePrefix}\n                    />\n                </Field>\n            )}\n\n            {showNumber && (\n                <Field\n                    className={'adyen-checkout-field--phone-number'}\n                    label={props.phoneNumberKey ? i18n.get(props.phoneNumberKey) : i18n.get('telephoneNumber')}\n                    errorMessage={getPhoneFieldError('phoneNumber')}\n                    isValid={valid.phoneNumber}\n                    filled={data?.phoneNumber?.length > 0}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phoneNumber'}\n                >\n                    <InputText\n                        className=\"adyen-checkout__input adyen-checkout-input adyen-checkout-input--phone-number\"\n                        type=\"tel\"\n                        name=\"phoneNumber\"\n                        value={data.phoneNumber}\n                        onInput={handleChangeFor('phoneNumber', 'input')}\n                        onBlur={handleChangeFor('phoneNumber', 'blur')}\n                        placeholder={props?.placeholders?.phoneNumber}\n                        autoCorrect=\"off\"\n                        required={true}\n                    />\n                </Field>\n            )}\n        </Fieldset>\n    );\n}\n\nPhoneInput.defaultProps = {\n    phoneLabel: 'telephoneNumber'\n};\n\nexport default PhoneInput;\n"],"names":["PhoneInput","props","i18n","useCoreContext","schema","requiredFields","items","length","showPrefix","includes","showNumber","handleChangeFor","data","valid","errors","isValid","triggerValidation","setSchema","useForm","defaultData","rules","phoneValidationRules","formatters","phoneFormatters","useEffect","toString","phoneNumber","phonePrefix","onChange","this","getPhoneFieldError","useCallback","field","propsField","key","errorMessage","get","h","Fieldset","classNameModifiers","Field","className","label","showValidIcon","dir","name","Select","placeholder","placeholders","selectedValue","phoneNumberKey","filled","InputText","type","value","onInput","onBlur","autoCorrect","required","defaultProps","phoneLabel"],"mappings":"0hBAYA,SAASA,EAAWC,GAChB,MAAMC,KAAEA,GAASC,IAEXC,EAASH,EAAMI,gBAAkB,IAAKJ,GAAOK,OAAOC,OAAS,CAAC,eAAiB,GAAK,eACpFC,EAAaJ,EAAOK,SAAS,kBAAoBR,GAAOK,OAAOC,OAC/DG,EAAaN,EAAOK,SAAS,gBAE7BE,gBAAEA,EAAeC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,QAAEA,EAAOC,kBAAEA,EAAiBC,UAAEA,GAAcC,EAA0B,CAC9GhB,UACGD,EACHG,SACAe,YAAalB,EAAMW,KACnBQ,MAAOC,EACPC,WAAYC,IAGhBC,GAAU,KACNP,EAAUb,EAAAA,GACX,CAACA,EAAOqB,aAGXD,GAAU,KACFZ,EAAKc,aACLf,EAAgB,cAAe,OAA/BA,CAAuCC,EAAKc,YAChD,GACD,CAACd,EAAKe,cAETH,GAAU,KACNvB,EAAM2B,SAAS,CAAEhB,OAAMC,QAAOC,SAAQC,WAAQ,GAC/C,CAACH,EAAMC,EAAOC,EAAQC,IAEzBc,KAAKb,kBAAoBA,EAEzB,MAAMc,EAAqBC,GACtBC,IACG,GAAIlB,EAAOkB,GAAQ,CACf,MAAMC,EAAuB,gBAAVD,EAA0B,sBAAwB,sBAC/DE,EAAMjC,EAAMgC,GAAchC,EAAMgC,GAAcnB,EAAOkB,GAAOG,aAClE,OAAOjC,EAAKkC,IAAIF,IAAQ,IAC5B,CACA,OAAO,IAAA,GAEX,CAACpB,IAGL,OACIuB,EAACC,EAAAA,CAASC,mBAAoB,CAAC,gBAC1B/B,GACG6B,EAACG,EAAAA,CACGC,UAAW,qCACXC,MAAOxC,EAAKkC,IAAI,mBAChBD,aAAcL,EAAmB,eACjCa,eAAe,EACf5B,QAASF,EAAMc,YACfiB,IAAK,MACL1C,KAAMA,EACN2C,KAAM,eAENR,EAACS,EAAAA,CACGL,UAAW,wEACXI,KAAM,cACNvC,MAAOL,EAAMK,MACbsB,SAAUjB,EAAgB,eAC1BoC,YAAa9C,GAAO+C,cAAcrB,YAClCsB,cAAerC,EAAKe,eAK/BjB,GACG2B,EAACG,EAAAA,CACGC,UAAW,qCACXC,MAAOzC,EAAMiD,eAAiBhD,EAAKkC,IAAInC,EAAMiD,gBAAkBhD,EAAKkC,IAAI,mBACxED,aAAcL,EAAmB,eACjCf,QAASF,EAAMa,YACfyB,OAAQvC,GAAMc,aAAanB,OAAS,EACpCqC,IAAK,MACL1C,KAAMA,EACN2C,KAAM,eAENR,EAACe,EAAAA,CACGX,UAAU,gFACVY,KAAK,MACLR,KAAK,cACLS,MAAO1C,EAAKc,YACZ6B,QAAS5C,EAAgB,cAAe,SACxC6C,OAAQ7C,EAAgB,cAAe,QACvCoC,YAAa9C,GAAO+C,cAActB,YAClC+B,YAAY,MACZC,UAAU,KAMlC,CAEA1D,EAAW2D,aAAe,CACtBC,WAAY"}