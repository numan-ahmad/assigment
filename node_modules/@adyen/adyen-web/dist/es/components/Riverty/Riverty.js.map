{"version":3,"file":"Riverty.js","sources":["../../../../src/components/Riverty/Riverty.tsx"],"sourcesContent":["import { h } from 'preact';\nimport OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport {\n    DISCLAIMER_MESSAGE_TRANSLATION_KEY,\n    allowedBillingCountries,\n    allowedDeliveryCountries,\n    deliveryAddressSpecification,\n    personalDetailsRequiredFields,\n    termsAndConditionsUrlMap,\n    privacyPolicyUrlMap\n} from './config';\nimport { getConsentUrl } from '../../utils/getConsentUrl';\nimport { LabelOnlyDisclaimerMessage } from '../internal/DisclaimerMessage/DisclaimerMessage';\nimport type { OpenInvoiceConfiguration } from '../helpers/OpenInvoiceContainer/types';\nimport { TxVariants } from '../tx-variants';\n\nexport default class Riverty extends OpenInvoiceContainer {\n    public static readonly type = TxVariants.riverty;\n\n    protected static defaultProps = {\n        personalDetailsRequiredFields,\n        deliveryAddressSpecification,\n        ...OpenInvoiceContainer.defaultProps\n    };\n\n    formatProps(props: OpenInvoiceConfiguration) {\n        const tocURL = getConsentUrl(props.countryCode, props.i18n?.locale, termsAndConditionsUrlMap);\n        const privacyURL = getConsentUrl(props.countryCode, props.i18n?.locale, privacyPolicyUrlMap);\n\n        return {\n            ...super.formatProps(props),\n            billingAddressSpecification: {\n                ...props.billingAddressSpecification,\n                allowedCountries: props.countryCode ? [props.countryCode] : allowedBillingCountries\n            },\n            deliveryAddressSpecification: {\n                ...props.deliveryAddressSpecification,\n                allowedCountries: allowedDeliveryCountries\n            },\n            consentCheckboxLabel: (\n                <LabelOnlyDisclaimerMessage message={props.i18n.get(DISCLAIMER_MESSAGE_TRANSLATION_KEY)} urls={[tocURL, privacyURL]} />\n            )\n        };\n    }\n}\n"],"names":["Riverty","OpenInvoiceContainer","formatProps","props","tocURL","getConsentUrl","countryCode","i18n","locale","termsAndConditionsUrlMap","privacyURL","privacyPolicyUrlMap","super","billingAddressSpecification","allowedCountries","allowedBillingCountries","deliveryAddressSpecification","allowedDeliveryCountries","consentCheckboxLabel","h","LabelOnlyDisclaimerMessage","message","get","DISCLAIMER_MESSAGE_TRANSLATION_KEY","urls","_define_property","type","TxVariants","riverty","defaultProps","personalDetailsRequiredFields"],"mappings":"wsBAgBe,MAAMA,UAAgBC,EASjCC,WAAAA,CAAYC,GACR,MAAMC,EAASC,EAAcF,EAAMG,YAAaH,EAAMI,MAAMC,OAAQC,GAC9DC,EAAaL,EAAcF,EAAMG,YAAaH,EAAMI,MAAMC,OAAQG,GAExE,MAAO,IACAC,MAAMV,YAAYC,GACrBU,4BAA6B,IACtBV,EAAMU,4BACTC,iBAAkBX,EAAMG,YAAc,CAACH,EAAMG,aAAeS,GAEhEC,6BAA8B,IACvBb,EAAMa,6BACTF,iBAAkBG,GAEtBC,qBACIC,EAACC,EAAAA,CAA2BC,QAASlB,EAAMI,KAAKe,IAAIC,GAAqCC,KAAM,CAACpB,EAAQM,KAGpH,EA1BAe,EADiBzB,EACM0B,OAAOC,EAAWC,SAEzCH,EAHiBzB,EAGA6B,eAAe,CAC5BC,gCACAd,kCACGf,EAAqB4B"}