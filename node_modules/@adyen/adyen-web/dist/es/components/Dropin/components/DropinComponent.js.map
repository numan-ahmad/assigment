{"version":3,"file":"DropinComponent.js","sources":["../../../../../src/components/Dropin/components/DropinComponent.tsx"],"sourcesContent":["import { Component, h } from 'preact';\nimport PaymentMethodList from './PaymentMethod/PaymentMethodList';\nimport Status from './status';\nimport getOrderStatus from '../../../core/Services/order-status';\nimport { DropinComponentProps, DropinComponentState, DropinStatusProps, onOrderCancelData } from '../types';\nimport './DropinComponent.scss';\nimport { UIElementStatus } from '../../internal/UIElement/types';\nimport { sanitizeOrder } from '../../internal/UIElement/utils';\nimport { PaymentAmount } from '../../../types/global-types';\nimport { ANALYTICS_RENDERED_STR } from '../../../core/Analytics/constants';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport UIElement from '../../internal/UIElement';\n\nexport class DropinComponent extends Component<DropinComponentProps, DropinComponentState> {\n    public state: DropinComponentState = {\n        elements: [],\n        instantPaymentElements: [],\n        storedPaymentElements: [],\n        orderStatus: null,\n        isDisabling: false,\n        status: { type: 'loading', props: undefined },\n        activePaymentMethod: null,\n        cachedPaymentMethods: {}\n    };\n\n    componentDidMount() {\n        this.prepareDropinData();\n    }\n\n    public prepareDropinData = () => {\n        const { order, clientKey, loadingContext } = this.props;\n        const [storedElementsPromises, elementsPromises, instantPaymentsPromises] = this.props.onCreateElements();\n        const orderStatusPromise = order ? getOrderStatus({ clientKey, loadingContext }, order) : null;\n\n        void Promise.all([storedElementsPromises, elementsPromises, instantPaymentsPromises, orderStatusPromise]).then(\n            ([storedPaymentElements, elements, instantPaymentElements, orderStatus]) => {\n                this.setState({ instantPaymentElements, elements, storedPaymentElements, orderStatus });\n                this.setStatus('ready');\n\n                this.props.modules?.analytics.sendAnalytics('dropin', {\n                    type: ANALYTICS_RENDERED_STR,\n                    configData: this.analyticConfigData\n                });\n            }\n        );\n\n        this.onOrderCancel = this.getOnOrderCancel();\n    };\n\n    get analyticConfigData() {\n        return {\n            openFirstStoredPaymentMethod: this.props.openFirstStoredPaymentMethod,\n            showStoredPaymentMethods: this.props.showStoredPaymentMethods\n        };\n    }\n\n    public setStatus = (status: UIElementStatus, props: DropinStatusProps = {}) => {\n        this.setState({ status: { type: status, props } });\n    };\n\n    private setActivePaymentMethod = (paymentMethod: UIElement): void => {\n        if (paymentMethod === this.state.activePaymentMethod) {\n            return;\n        }\n\n        this.setState(prevState => ({\n            activePaymentMethod: paymentMethod,\n            cachedPaymentMethods: { ...prevState.cachedPaymentMethods, [paymentMethod._id]: true }\n        }));\n\n        if (this.state.cachedPaymentMethods[paymentMethod._id]) {\n            paymentMethod.activate();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.status.type !== this.state.status.type && this.state.activePaymentMethod) {\n            this.state.activePaymentMethod.setStatus(this.state.status.type);\n        }\n\n        if (this.state.status.type === 'ready' && prevState.status.type !== 'ready' && this.props.onReady) {\n            this.props.onReady();\n        }\n    }\n\n    private handleOnSelectPaymentMethod = paymentMethod => {\n        const { activePaymentMethod } = this.state;\n\n        this.setActivePaymentMethod(paymentMethod);\n\n        // onSelect event\n        if ((activePaymentMethod && activePaymentMethod._id !== paymentMethod._id) || !activePaymentMethod) {\n            this.props.onSelect?.(paymentMethod);\n\n            paymentMethod.submitAnalytics({ type: ANALYTICS_RENDERED_STR });\n        }\n    };\n\n    private handleDisableStoredPaymentMethod = storedPaymentMethod => {\n        this.setState({ isDisabling: true });\n\n        new Promise((resolve, reject) => this.props.onDisableStoredPaymentMethod(storedPaymentMethod.props.storedPaymentMethodId, resolve, reject))\n            .then(() => {\n                this.setState(prevState => ({\n                    storedPaymentElements: prevState.storedPaymentElements.filter(pm => pm._id !== storedPaymentMethod._id)\n                }));\n                this.setState({ isDisabling: false });\n            })\n            .catch(() => {\n                this.setState({ isDisabling: false });\n            });\n    };\n\n    closeActivePaymentMethod() {\n        this.setState({ activePaymentMethod: null });\n    }\n\n    /**\n     * getOnOrderCancel decides which onOrderCancel logic should be used, manual or sessions\n     */\n    private getOnOrderCancel = () => {\n        if (this.props.onOrderCancel) {\n            return (data: onOrderCancelData) => {\n                const order = sanitizeOrder(data.order);\n                new Promise<{ amount: PaymentAmount }>((resolve, reject) => {\n                    this.props.onOrderCancel({ order }, { resolve, reject });\n                })\n                    .then(({ amount }) => this.props.elementRef.handleAdvanceFlowPaymentMethodsUpdate(null, amount))\n                    .catch(error => {\n                        throw new AdyenCheckoutError('NETWORK_ERROR', error);\n                    });\n            };\n        }\n        if (this.props.session) {\n            return (data: onOrderCancelData) =>\n                this.props.session\n                    .cancelOrder(data)\n                    .then(() => this.props.core.update({ order: null }))\n                    .catch(error => {\n                        console.error(error);\n                        this.setStatus(error?.message || 'error');\n                    });\n        }\n        return null;\n    };\n\n    private onOrderCancel: (data: onOrderCancelData) => void;\n\n    render(props, { elements, instantPaymentElements, storedPaymentElements, status, activePaymentMethod, cachedPaymentMethods }) {\n        const isLoading = status.type === 'loading';\n        const isRedirecting = status.type === 'redirect';\n        const hasPaymentMethodsToBeDisplayed = elements?.length || instantPaymentElements?.length || storedPaymentElements?.length;\n\n        switch (status.type) {\n            case 'success':\n                return <Status.Success message={props?.amount?.value === 0 ? 'resultMessages.preauthorized' : status.props?.message} />;\n\n            case 'error':\n                return <Status.Error message={status.props?.message} />;\n\n            case 'custom':\n                return status.props?.component?.render();\n\n            default:\n                return (\n                    <div className={`adyen-checkout__dropin adyen-checkout__dropin--${status.type}`}>\n                        {isRedirecting && status.props.component && status.props.component.render()}\n                        {isLoading && status.props && status.props.component && status.props.component.render()}\n                        {!!hasPaymentMethodsToBeDisplayed && (\n                            <PaymentMethodList\n                                isLoading={isLoading || isRedirecting}\n                                isDisablingPaymentMethod={this.state.isDisabling}\n                                paymentMethods={elements}\n                                instantPaymentMethods={instantPaymentElements}\n                                storedPaymentMethods={storedPaymentElements}\n                                activePaymentMethod={activePaymentMethod}\n                                cachedPaymentMethods={cachedPaymentMethods}\n                                order={this.props.order}\n                                orderStatus={this.state.orderStatus}\n                                onOrderCancel={this.onOrderCancel}\n                                onSelect={this.handleOnSelectPaymentMethod}\n                                openPaymentMethod={this.props.openPaymentMethod}\n                                openFirstPaymentMethod={this.props.openFirstPaymentMethod}\n                                openFirstStoredPaymentMethod={this.props.openFirstStoredPaymentMethod}\n                                onDisableStoredPaymentMethod={this.handleDisableStoredPaymentMethod}\n                                showRemovePaymentMethodButton={this.props.showRemovePaymentMethodButton}\n                                showRadioButton={this.props.showRadioButton}\n                            />\n                        )}\n                    </div>\n                );\n        }\n    }\n}\n\nexport default DropinComponent;\n"],"names":["DropinComponent","Component","componentDidMount","this","prepareDropinData","analyticConfigData","openFirstStoredPaymentMethod","props","showStoredPaymentMethods","componentDidUpdate","prevProps","prevState","status","type","state","activePaymentMethod","setStatus","onReady","closeActivePaymentMethod","setState","render","elements","instantPaymentElements","storedPaymentElements","cachedPaymentMethods","isLoading","isRedirecting","hasPaymentMethodsToBeDisplayed","length","h","Status","Success","message","amount","value","Error","component","div","className","PaymentMethodList","isDisablingPaymentMethod","isDisabling","paymentMethods","instantPaymentMethods","storedPaymentMethods","order","orderStatus","onOrderCancel","onSelect","handleOnSelectPaymentMethod","openPaymentMethod","openFirstPaymentMethod","onDisableStoredPaymentMethod","handleDisableStoredPaymentMethod","showRemovePaymentMethodButton","showRadioButton","super","args","_define_property","undefined","clientKey","loadingContext","storedElementsPromises","elementsPromises","instantPaymentsPromises","onCreateElements","orderStatusPromise","getOrderStatus","Promise","all","then","modules","analytics","sendAnalytics","ANALYTICS_RENDERED_STR","configData","getOnOrderCancel","setActivePaymentMethod","paymentMethod","_id","activate","submitAnalytics","storedPaymentMethod","resolve","reject","storedPaymentMethodId","filter","pm","catch","data","sanitizeOrder","elementRef","handleAdvanceFlowPaymentMethodsUpdate","error","AdyenCheckoutError","session","cancelOrder","core","update","console"],"mappings":"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"}