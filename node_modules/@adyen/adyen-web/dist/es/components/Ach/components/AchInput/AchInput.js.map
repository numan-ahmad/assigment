{"version":3,"file":"AchInput.js","sources":["../../../../../../src/components/Ach/components/AchInput/AchInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport classNames from 'classnames';\nimport AchSecuredFields from './components/AchSecuredFields';\nimport SecuredFieldsProvider from '../../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport Field from '../../../internal/FormFields/Field';\nimport LoadingWrapper from '../../../internal/LoadingWrapper/LoadingWrapper';\nimport defaultProps from './defaultProps';\nimport defaultStyles from './defaultStyles';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './AchInput.scss';\nimport { ACHInputDataState, ACHInputProps, ACHInputStateError, ACHInputStateValid } from './types';\nimport StoreDetails from '../../../internal/StoreDetails';\nimport InputText from '../../../internal/FormFields/InputText';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\nimport RadioGroup from '../../../internal/FormFields/RadioGroup';\n\nfunction validateHolderName(holderName, holderNameRequired = false) {\n    if (holderNameRequired) {\n        return !!holderName && typeof holderName === 'string' && holderName.trim().length > 0;\n    }\n    return true;\n}\n\nfunction AchInput(props: ACHInputProps) {\n    const { i18n } = useCoreContext();\n\n    const holderNameIsValid = props.hasHolderName && (!!props.holderName || !!props.data.holderName);\n\n    const [errors, setErrors] = useState<ACHInputStateError>({});\n    const [valid, setValid] = useState<ACHInputStateValid>({\n        ...(props.holderNameRequired && { holderName: holderNameIsValid })\n    });\n\n    const [data, setData] = useState<ACHInputDataState>({\n        bankAccountType: 'checking',\n        ...(props.hasHolderName && { holderName: props.holderName || props.data.holderName })\n    });\n\n    const [isSfpValid, setIsSfpValid] = useState(false);\n    const [focusedElement, setFocusedElement] = useState('');\n    const [storePaymentMethod, setStorePaymentMethod] = useState(false);\n\n    const handleFocus = e => {\n        const isFocused = e.focus === true;\n\n        setFocusedElement(e.currentFocusObject);\n\n        if (isFocused) {\n            props.onFocus(e);\n        } else {\n            props.onBlur(e);\n        }\n    };\n\n    const handleHolderName = e => {\n        const holderName = e.target.value;\n\n        setData({ ...data, holderName });\n        setErrors({ ...errors, holderName: props.holderNameRequired ? !validateHolderName(holderName) : false });\n        setValid({ ...valid, holderName: props.holderNameRequired ? validateHolderName(holderName, props.holderNameRequired) : true });\n    };\n\n    const handleBankAccountType = e => {\n        const bankAccountType = e.target.value;\n\n        setData({ ...data, bankAccountType });\n    };\n\n    const handleSecuredFieldsChange = newState => {\n        const sfState = newState;\n\n        const tempHolderName = sfState.autoCompleteName ? sfState.autoCompleteName : data.holderName;\n\n        setData({ ...data, ...sfState.data, holderName: tempHolderName });\n        setErrors({ ...errors, ...sfState.errors });\n        setValid({\n            ...valid,\n            ...sfState.valid,\n            holderName: props.holderNameRequired ? validateHolderName(tempHolderName, props.holderNameRequired) : true\n        });\n\n        setIsSfpValid(sfState.isSfpValid);\n    };\n\n    // Refs\n    const sfp = useRef(null);\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const achRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(achRef.current).length) {\n        props.setComponentRef?.(achRef.current);\n    }\n\n    achRef.current.showValidation = () => {\n        // Validate SecuredFields\n        sfp.current.showValidation();\n\n        // Validate holderName\n        if (props.holderNameRequired && !valid.holderName) {\n            setErrors({ ...errors, holderName: true });\n        }\n    };\n\n    achRef.current.setStatus = setStatus;\n\n    useEffect(() => {\n        this.setFocusOn = sfp.current.setFocusOn;\n        this.updateStyles = sfp.current.updateStyles;\n\n        return () => {\n            sfp.current.destroy();\n        };\n    }, []);\n\n    // Run when state.data, -errors or -valid change\n    useEffect(() => {\n        // Validate whole component i.e holderName + securedFields\n        const holderNameValid = validateHolderName(data.holderName, props.holderNameRequired);\n        const sfpValid = isSfpValid;\n\n        const isValid = sfpValid && holderNameValid;\n\n        props.onChange({ data, isValid, storePaymentMethod });\n    }, [data, valid, errors, storePaymentMethod]);\n\n    return (\n        <div className=\"adyen-checkout__ach\">\n            <FormInstruction />\n\n            <SecuredFieldsProvider\n                ref={sfp}\n                {...extractPropsForSFP(props)}\n                styles={{ ...defaultStyles, ...props.styles }}\n                onChange={handleSecuredFieldsChange}\n                onFocus={handleFocus}\n                render={({ setRootNode, setFocusOn }, sfpState) => (\n                    <div ref={setRootNode} className=\"adyen-checkout__ach-input sf-input__wrapper\">\n                        <LoadingWrapper status={sfpState.status}>\n                            <div className={classNames(['adyen-checkout__fieldset', 'adyen-checkout__fieldset--ach'])}>\n                                {<div className=\"adyen-checkout__fieldset__title\">{i18n.get('ach.bankAccount')}</div>}\n\n                                <Field classNameModifiers={['bankAccountType', 'no-borders']} name={'bankAccountType'} useLabelElement={false}>\n                                    <RadioGroup\n                                        name={'bankAccountType'}\n                                        value={data.bankAccountType}\n                                        items={[\n                                            { id: 'checking', name: i18n.get('ach.checking') },\n                                            { id: 'savings', name: i18n.get('ach.savings') }\n                                        ]}\n                                        onChange={handleBankAccountType}\n                                        required={true}\n                                        style={'button'}\n                                    />\n                                </Field>\n\n                                {props.hasHolderName && (\n                                    <Field\n                                        label={i18n.get('ach.accountHolderNameField.title')}\n                                        className={'adyen-checkout__pm__holderName'}\n                                        errorMessage={!!errors.holderName && i18n.get('ach.accountHolderNameField.invalid')}\n                                        showContextualElement={props.showContextualElement}\n                                        contextualText={i18n.get('ach.accountHolderNameField.contextualText')}\n                                        isValid={!!valid.holderName}\n                                        name={'holderName'}\n                                    >\n                                        <InputText\n                                            className=\"adyen-checkout__pm__holderName__input adyen-checkout__input\"\n                                            placeholder={props?.placeholders?.holderName}\n                                            value={data.holderName}\n                                            required={props.holderNameRequired}\n                                            onInput={handleHolderName}\n                                        />\n                                    </Field>\n                                )}\n\n                                <AchSecuredFields\n                                    focusedElement={focusedElement}\n                                    onFocusField={setFocusOn}\n                                    errors={sfpState.errors}\n                                    valid={sfpState.valid}\n                                />\n                            </div>\n\n                            {props.enableStoreDetails && <StoreDetails onChange={setStorePaymentMethod} />}\n                        </LoadingWrapper>\n                    </div>\n                )}\n            />\n            {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n\nAchInput.defaultProps = defaultProps;\n\nexport default AchInput;\n\nconst extractPropsForSFP = (props: ACHInputProps) => {\n    return {\n        autoFocus: props.autoFocus,\n        clientKey: props.clientKey,\n        i18n: props.i18n,\n        keypadFix: props.keypadFix,\n        legacyInputMode: props.legacyInputMode,\n        loadingContext: props.loadingContext,\n        onAllValid: props.onAllValid,\n        onConfigSuccess: props.onConfigSuccess,\n        onError: props.onError,\n        onFieldValid: props.onFieldValid,\n        onFocus: props.onFocus,\n        onLoad: props.onLoad,\n        showWarnings: props.showWarnings,\n        styles: props.styles,\n        type: props.type,\n        forceCompat: props.forceCompat,\n        resources: props.resources,\n        placeholders: props.placeholders,\n        handleKeyPress: props.handleKeyPress\n    };\n};\n"],"names":["validateHolderName","holderName","holderNameRequired","trim","length","AchInput","props","i18n","useCoreContext","holderNameIsValid","hasHolderName","data","errors","setErrors","useState","valid","setValid","setData","bankAccountType","isSfpValid","setIsSfpValid","focusedElement","setFocusedElement","storePaymentMethod","setStorePaymentMethod","handleHolderName","e","target","value","handleBankAccountType","sfp","useRef","status","setStatus","achRef","Object","keys","current","setComponentRef","showValidation","useEffect","this","setFocusOn","updateStyles","destroy","holderNameValid","isValid","onChange","h","div","className","FormInstruction","SecuredFieldsProvider","ref","extractPropsForSFP","styles","defaultStyles","newState","sfState","tempHolderName","autoCompleteName","onFocus","isFocused","focus","currentFocusObject","onBlur","render","setRootNode","sfpState","LoadingWrapper","classNames","get","Field","classNameModifiers","name","useLabelElement","RadioGroup","items","id","required","style","label","errorMessage","showContextualElement","contextualText","InputText","placeholder","placeholders","onInput","AchSecuredFields","onFocusField","enableStoreDetails","StoreDetails","showPayButton","payButton","defaultProps","autoFocus","clientKey","keypadFix","legacyInputMode","loadingContext","onAllValid","onConfigSuccess","onError","onFieldValid","onLoad","showWarnings","type","forceCompat","resources","handleKeyPress"],"mappings":"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"}