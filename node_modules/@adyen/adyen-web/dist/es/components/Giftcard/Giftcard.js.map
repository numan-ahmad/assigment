{"version":3,"file":"Giftcard.js","sources":["../../../../src/components/Giftcard/Giftcard.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport GiftcardComponent from './components/GiftcardComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PayButton from '../internal/PayButton';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { PaymentAmount } from '../../types/global-types';\nimport { GiftCardElementData, GiftCardConfiguration, balanceCheckResponseType } from './types';\nimport { TxVariants } from '../tx-variants';\n\nexport class GiftcardElement extends UIElement<GiftCardConfiguration> {\n    public static type = TxVariants.giftcard;\n\n    protected static defaultProps = {\n        brandsConfiguration: {}\n    };\n\n    formatProps(props) {\n        return {\n            ...props?.configuration,\n            ...props\n        };\n    }\n\n    formatData(): GiftCardElementData {\n        return {\n            paymentMethod: {\n                type: this.constructor['type'],\n                brand: this.props.brand,\n                encryptedCardNumber: this.state.data?.encryptedCardNumber,\n                encryptedSecurityCode: this.state.data?.encryptedSecurityCode\n            }\n        };\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get icon() {\n        return this.props.brandsConfiguration[this.props.brand]?.icon || this.props.icon || this.resources.getImage()(this.props.brand);\n    }\n\n    get displayName() {\n        return this.props.brandsConfiguration[this.props.brand]?.name || this.props.name;\n    }\n\n    private handleBalanceCheck = (data: GiftCardElementData): Promise<balanceCheckResponseType> => {\n        if (this.props.onBalanceCheck) {\n            return new Promise((resolve, reject) => {\n                void this.props.onBalanceCheck(resolve, reject, data);\n            });\n        }\n\n        if (this.props.session) {\n            return this.props.session.checkBalance(data);\n        }\n    };\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                void this.props.onOrderRequest(resolve, reject, data);\n            });\n\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    public balanceCheck() {\n        return this.onBalanceCheck();\n    }\n\n    private onBalanceCheck = (): void => {\n        // skip balance check if no onBalanceCheck event has been defined\n        const hasBalanceCheck = this.props.session || this.props.onBalanceCheck;\n        if (!hasBalanceCheck) return super.submit();\n\n        this.setStatus('loading');\n\n        this.handleBalanceCheck(this.formatData())\n            .then(({ balance, transactionLimit = {} as PaymentAmount }) => {\n                if (!balance) throw new Error('card-error'); // card doesn't exist\n                if (balance?.currency !== this.props.amount?.currency) throw new Error('currency-error');\n                if (balance?.value <= 0) throw new Error('no-balance');\n\n                this.componentRef.setBalance({ balance, transactionLimit });\n\n                if (this.props.amount.value > balance.value || this.props.amount.value > transactionLimit.value) {\n                    if (this.props.order) {\n                        return super.submit();\n                    }\n\n                    return this.onOrderRequest(this.data).then((order: { orderData: string; pspReference: string }) => {\n                        this.setState({ order: { orderData: order.orderData, pspReference: order.pspReference } });\n                        return super.submit();\n                    });\n                } else {\n                    return this.handleOnRequiringConfirmation().then(() => super.submit());\n                }\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) this.handleError(new AdyenCheckoutError('ERROR', error));\n            });\n    };\n\n    private handleOnRequiringConfirmation = (): Promise<any> => {\n        if (this.props.onRequiringConfirmation) {\n            return new Promise<void>((resolve, reject) => {\n                void this.props.onRequiringConfirmation(resolve, reject);\n            });\n        }\n    };\n\n    public submit() {\n        if (!this.isValid) {\n            this.showValidation();\n            return false;\n        }\n\n        this.balanceCheck();\n    }\n\n    // Giftcards override the regular payButton flow\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <GiftcardComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    handleKeyPress={this.handleKeyPress}\n                    showPayButton={this.props.showPayButton}\n                    onChange={this.setState}\n                    onBalanceCheck={this.onBalanceCheck}\n                    onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default GiftcardElement;\n"],"names":["GiftcardElement","UIElement","formatProps","props","configuration","formatData","paymentMethod","type","this","constructor","brand","encryptedCardNumber","state","data","encryptedSecurityCode","isValid","icon","brandsConfiguration","resources","getImage","displayName","name","balanceCheck","onBalanceCheck","submit","showValidation","render","h","CoreProvider","i18n","loadingContext","GiftcardComponent","ref","componentRef","handleKeyPress","showPayButton","onChange","setState","onSubmit","payButton","super","args","_define_property","handleBalanceCheck","Promise","resolve","reject","session","checkBalance","onOrderRequest","createOrder","setStatus","then","balance","transactionLimit","Error","currency","amount","value","setBalance","order","orderData","pspReference","handleOnRequiringConfirmation","catch","error","message","onError","handleError","AdyenCheckoutError","onRequiringConfirmation","PayButton","TxVariants","giftcard","defaultProps"],"mappings":"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"}